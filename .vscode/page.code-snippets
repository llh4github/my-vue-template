{
  "页面hook方法生成模版": {
    "scope": "typescript",
    "prefix": "pagehook",
    "description": "页面的hook方法模版",
    "body": [
      "import { JsonWrapper, PageResult } from \"@/api/utils\"",
      "import { auditFields } from \"@/views/commons\"",
      "import type { PaginationProps } from \"@pureadmin/table\"",
      "import { reactive, ref } from \"vue\"",
      "",
      "export function $1<T>(query: (data: any) => Promise<JsonWrapper<PageResult<T>>>,) {",
      "  const formRef = ref()",
      "  const dataList = ref([])",
      "  const loading = ref(true)",
      "  const searchForm = reactive({",
      "    name: \"\",",
      "  })",
      "  const pagination = reactive<PaginationProps>({",
      "    total: 0,",
      "    pageSize: 10,",
      "    currentPage: 1,",
      "    background: true,",
      "  })",
      "  const handleSizeChange = (val: number) => {",
      "    pagination.pageSize = val",
      "    queryDataFun()",
      "  }",
      "  const handleCurrentChange = (val: number) => {",
      "    pagination.currentPage = val",
      "    queryDataFun()",
      "  }",
      "  const openDialog = (title = \"新增\", row?:any) => {}",
      "  const queryDataFun = async () => {",
      "    const param = {",
      "      ...searchForm,",
      "      page: {",
      "        pageIndex: pagination.currentPage,",
      "        pageSize: pagination.pageSize,",
      "      },",
      "    }",
      "    query(param)",
      "      .then(resp => {",
      "        if (resp.success) {",
      "          dataList.value = resp.data.records",
      "          pagination.total = resp.data.totalRowCount",
      "        }",
      "      })",
      "      .finally(() => (loading.value = false))",
      "  }",
      "  const columns = () => {",
      "    const columns: TableColumnList = [",
      "      ...auditFields({",
      "        createdTime: true,",
      "      }),",
      "    ]",
      "    return columns",
      "  }",
      "  return {",
      "    columns,",
      "    formRef,",
      "    dataList,",
      "    loading,",
      "    openDialog,",
      "    searchForm,",
      "    pagination,",
      "    queryDataFun,",
      "    handleSizeChange,",
      "    handleCurrentChange,",
      "  }",
      "}"
    ]
  },
  "基本页面模版": {
    "scope": "vue",
    "prefix": "pageindex",
    "description": "index页面模版",
    "body": [
      "<script setup lang=\"ts\">",
      "import { onMounted } from \"vue\"",
      "import Refresh from \"@iconify-icons/ep/refresh\"",
      "import Search from \"@iconify-icons/ep/search\"",
      "import { useRenderIcon } from \"@/components/ReIcon/src/hooks\"",
      "import { PureTableBar } from \"@/components/RePureTableBar\"",
      "defineOptions({",
      "  name: \"$1\",",
      "})",
      "const {",
      "  columns,",
      "  formRef,",
      "  dataList,",
      "  loading,",
      "  searchForm,",
      "  queryDataFun,",
      "  pagination,",
      "  openDialog,",
      "  handleSizeChange,",
      "  handleCurrentChange,",
      "} = $2(simplePageQuery)",
      "onMounted(() => {",
      "  queryDataFun()",
      "})",
      "</script>",
      "<template>",
      "  <div class=\"main\">",
      "    <el-form",
      "      ref=\"formRef\"",
      "      :inline=\"true\"",
      "      :model=\"searchForm\"",
      "      class=\"search-form bg-bg_color w-[99/100] pl-8 pt-[12px]\"",
      "    >",
      "      <el-form-item>",
      "        <el-button",
      "          type=\"primary\"",
      "          :icon=\"useRenderIcon(Search)\"",
      "          @click=\"queryDataFun\"",
      "          :loading=\"loading\"",
      "        >",
      "          搜索",
      "        </el-button>",
      "        <el-button :icon=\"useRenderIcon(Refresh)\"> 重置 </el-button>",
      "      </el-form-item>",
      "    </el-form>",
      "    <PureTableBar title=\"TODO管理\" :columns=\"columns()\" @refresh=\"queryDataFun\">",
      "      <template #buttons>",
      "        <el-button type=\"primary\" @click=\"openDialog()\">新增</el-button>",
      "      </template>",
      "      <template v-slot=\"{ size, dynamicColumns }\">",
      "        <pure-table",
      "          align-whole=\"center\"",
      "          showOverflowTooltiP",
      "          table-layout=\"auto\"",
      "          :loading=\"loading\"",
      "          :size=\"size\"",
      "          adaptive",
      "          :data=\"dataList\"",
      "          :columns=\"dynamicColumns\"",
      "          :pagination=\"pagination\"",
      "          :paginationSmall=\"size === 'small' ? true : false\"",
      "          :header-cell-style=\"{",
      "            background: 'var(--el-fill-color-light)',",
      "            color: 'var(--el-text-color-primary)',",
      "          }\"",
      "          @page-size-change=\"handleSizeChange\"",
      "          @page-current-change=\"handleCurrentChange\"",
      "      /></template>",
      "    </PureTableBar>",
      "  </div>",
      "</template>",
      "<style lang=\"scss\" scoped></style>"
    ]
  }
}
